name: Deploy

on:
    push:
        branches:
            - master

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            # Install the ssh key
            - name: Install SSH key and start agent
              uses: webfactory/ssh-agent@v0.4.1
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            # Deploy our infrastructure (if needed)
            - uses: hashicorp/setup-terraform@v1
              with:
                terraform_version: 0.12.25
                cli_config_credentials_token: ${{ secrets.TERRAFORM_API_KEY }}
            - run: terraform fmt -check=true -write=false -diff -recursive
              working-directory: ./deploy/terraform
            - run: terraform init
              working-directory: ./deploy/terraform
            - run: terraform plan -out tf.plan > /dev/null
              working-directory: ./deploy/terraform
              env:
                  TF_VAR_do_token: ${{secrets.DO_TOKEN}}
                  TF_VAR_do_data_volume_id: ${{secrets.DO_DATA_VOLUME_ID}}
                  TF_VAR_do_floating_ip: ${{secrets.BOX_IP}}
                  TF_VAR_ssh_fingerprint: ${{secrets.DO_SSH_FINGERPRINT}}
                  TF_VAR_ssh_private_key: ${{secrets.SSH_PRIVATE_KEY}}
            - run: terraform apply tf.plan > /dev/null
              working-directory: ./deploy/terraform
            - run: echo "::add-mask::${{env.BOX_IP}}"
              env:
                  BOX_IP: ${{secrets.BOX_IP}}
            - run: ssh-keyscan -t rsa ${{env.BOX_IP}} >> ~/.ssh/known_hosts
              env:
                  BOX_IP: ${{secrets.BOX_IP}}

            # Build the app
            - name: Use Node.js 14.x
              uses: actions/setup-node@v1
              with:
                  node-version: 14.x
            - name: Install node modules
              run: npm install
            - name: Build files
              run: npm run build

            # Deploy it to the server
            - name: Deploy Setup (can fail)
              run: npx pm2 deploy production setup || true
              env:
                  BOX_IP: ${{secrets.BOX_IP}}
            - name: Deploy
              run: npx pm2 deploy production
              env:
                  BOX_IP: ${{secrets.BOX_IP}}
